<h1>About</h1>
<p>打給厚，挖喜林奇川</p>
<div>
<div>倉儲: <a href="https://github.com/mdecad2022/site-41023130.git">https://github.com/mdecad2022/site-41023130.git</a></div>
<div>網頁: <a href="https://mdecad2022.github.io/site-41023130/">https://mdecad2022.github.io/site-41023130/ </a></div>
<div></div>
<div> </div>
<div>
<div>2022 Fall 電腦輔助設計與實習到底在教甚麼?</div>
<div data-tid="messageBodyContainer">
<div data-tid="messageBodyContent">
<div>
<div>
<div>電腦輔助設計包含電腦、輔助與設計等三個要素, 電腦包含軟體、硬體與介於兩者中間的所謂韌體 (<a href="https://en.wikipedia.org/wiki/Firmware" title="https://en.wikipedia.org/wiki/firmware">Firmware</a>), 而所謂"輔助" (Aided) 則指從旁協助, 最後的設計 (Design), 則泛指將使用者的需求, 依據設計者的安排與確認流程, 逐一從虛 (模擬) 邁向實體 (實現).</div>
<div>從 Firmware 出現的動機與背景:</div>
<blockquote>
<div>As computers began to increase in <span>complexity</span>, it became clear that various programs needed to first be initiated and run to provide a consistent environment necessary for running more complex programs at the user's discretion. This required programming the computer to run those programs <span>automatically</span>. Furthermore, as companies, universities, and marketers wanted to sell computers to <span>laypeople</span> with little technical knowledge, greater automation became necessary to allow a lay-user to easily run programs for practical purposes. This gave rise to a kind of software that <span>a user would not consciously run</span>, and it led to software that <span>a lay user wouldn't even know about</span>.</div>
</blockquote>
<div>共有幾個關鍵字詞, 其中包括 complexity, automatically, laypeople, a user would not consciously run, 以及最後的 a lay user wouldn't even know about.</div>
<div>這段文字說明韌體 (Firmware) 的出現可以歸納出下列動機與原因:</div>
<ol>
<li>電腦的發展越來越複雜之後, 透過軟體、電腦硬體及網路環境溝通的事項變得越來越多且精細.</li>
<li>使得這些硬體元件、使用環境辨識與啟動相關設定, 改由功能更強且自動執行的韌體程式進行處理.</li>
<li>此外, 為了推廣讓更多較無專業知識的普通人使用電腦.</li>
<li>於是介於電腦軟體、電腦硬體及網路環境間, 儘量不讓使用者察覺韌體的存在.</li>
<li>但為了提升電腦的使用效能, 這些精密配置且自動執行的韌體程式卻越來越多.</li>
<li>最後, 一般人 (也就是較無專業知識的普通人) 在使用電腦時, 根本就不知道電腦的運行過程中, 有所謂韌體的存在.</li>
</ol>
<div>假如我們將上述文句使用者操作的"電腦"換成"<span>現代產品設計與開發流程套件</span>", 而將"韌體"換成"<span>數學理論、資料結構與演算法</span>", 就成為:</div>
<ol>
<li>"現代產品設計與開發流程套件"的發展越來越複雜之後, 透過軟體、電腦硬體及網路環境溝通的事項變得越來越多且精細.</li>
<li>使得這些硬體元件、使用環境辨識與啟動相關設定, 改由功能更強且自動執行的"數學理論、資料結構與演算法"程式進行處理.</li>
<li>此外, 為了推廣讓更多較無專業知識的普通人使用"現代產品設計與開發流程套件".</li>
<li>於是介於電腦軟體、電腦硬體及網路環境間, 儘量不讓使用者察覺"數學理論、資料結構與演算法"的存在.</li>
<li>但為了提升"現代產品設計與開發流程套件"的使用效能, 這些精密配置且自動執行的"數學理論、資料結構與演算法"程式卻越來越多.</li>
<li>最後, 一般人 (也就是較無專業知識的普通人) 在使用"現代產品設計與開發流程套件"時, 根本就不知道電腦的運行過程中, 有所謂"數學理論、資料結構與演算法"的存在.</li>
</ol>
<div>假如再將"<span>數學理論、資料結構與演算法</span>"泛指為 Theory、Structure and Algorithm, 也就是"原理、架構與邏輯"則有關電腦輔助設計課程內容在大學課程的安排就可以分為"不需要了解電腦輔助設計套件原理、架構與邏輯"的操作者, 以及"需要了解電腦輔助設計套件原理、架構與邏輯"的操作與開發者.</div>
<div>2022 Fall 電腦輔助設計與實習課程就是在訓練與培養"<span>需要了解電腦輔助設計套件原理、架構與邏輯</span>"的操作與開發者.</div>
<div>三十年前只要會操作電腦, 就一定會有工作.</div>
<div>二十年前只要會繪製 2D 產品設計工程圖, 就一定會有工作.</div>
<div>十年前只要會繪製 3D 產品設計工程圖, 就一定會有工作.</div>
<div>現在只要會操作 CAD/CAE/CAM 電腦套件, 就一定會有工作.</div>
<div>十年後......三十歲......, 就一定會有工作.</div>
<div>二十年後......四十歲......, 就一定會有工作.</div>
<div>三十年後......五十歲......, 就一定會有工作.</div>
</div>
</div>
</div>
</div>
</div>
<div>&lt;https://teams.microsoft.com/l/message/19:c1d1634109a54e1db839815e032131d8@thread.tacv2/1669001374060?tenantId=e650a2d7-e923-45bb-8fa6-1af5b0f72f09&amp;amp;groupId=3eda9b91-6227-4479-9f15-5541882d4a94&amp;amp;parentMessageId=1669001374060&amp;amp;teamName=cad2022&amp;amp;channelName=w12&amp;amp;createdTime=1669001374060&amp;amp;allowXTenantAccess=false&gt;</div>
</div>
<p>cmsite: wcms use <a href="https://github.com/mdecycu/cmsimde">https://github.com/mdecycu/cmsimde</a> as submodule</p><h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation</h4>
<h4>Variables</h4>
<h4>Comments</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a></h4>
<h4>print</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p><textarea autocomplete="off" id="kw_console2">其中</textarea></p>
<h1>期中</h1>
<p>W1 建立GITHUB 建立倉儲</p>
<p>w2 放假</p>
<p>w3 進入teams 加入會議</p>
<ul>
<li data-aria-level="1" data-aria-posinset="1"><span data-contrast="auto"><span>透過   mdecad2022   的 organization 建立個人可以管理的倉儲 (site-Github_帳號)</span></span><span> </span></li>
<li data-aria-level="1" data-aria-posinset="2"><span data-contrast="auto"><span>利用   replit 帳號所啟動的動態網站進行內容管理</span></span><span> </span></li>
<li data-aria-level="1" data-aria-posinset="3"><span data-contrast="auto"><span>動態轉為靜態網站內容之後,   要設法與 Github 倉儲同步.</span></span><span> </span></li>
<li data-aria-level="1" data-aria-posinset="3"><span>下載以下三個資料夾</span><span></span>
<p><span data-contrast="none"><span>NX2027.3401_lite</span></span></p>
<p><span data-contrast="none"><span></span></span><span>portable_python_3.10.6</span></p>
<p><span data-contrast="none"><span></span></span><span>CoppeliaSimEdu_4.3.0_rev12</span>W3</p>
</li>
</ul>
<p>w4 打開可攜程式</p>
<p>w5 更新版本</p>
<p>.建立考試網站帳號</p>
<p>.下載可攜,建立近端可攜系統。</p>
<p>登入Replit</p>
<p><span data-contrast="auto"><span>在 Replit 執行動態網站:</span></span><span> </span></p>
<p><span data-contrast="auto"><span>必須進入 Shell, 在倉儲根目錄執行下列兩則指令 (取下子模組內容, 並安裝執行所需模組).</span></span><span> </span></p>
<p><span data-contrast="none"><span>git submodule update --init --recursive</span></span><span> </span></p>
<p><br/><span data-contrast="none"><span>pip install   flask flask_cors bs4 lxml pelican markdown gevent</span></span><span> </span></p>
<p>w6 NX2022下載 ONSHAPE辦帳密</p>
<p>W7 網路設定與可攜系統 雙網路協定</p>
<p>W8 NX2022開啟 ONSHAPE登入</p>
<h4 style="box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Web', sans-serif; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;"><a href="https://github.com/solvespace/solvespace/releases/download/v3.1/solvespace.exe" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://github.com/solvespace/solvespace/releases/download/v3.1/solvespace.exe">下載 Solvespace 3.1 版 for Windows</a></h4>
<p></p>
<h1>HW</h1>
<h2>w6</h2>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"></div>
<div class="container"><nav>
<div class="container">
<div class="row pt-3 mx-auto"><a href="/downloads/w6.7z">/downloads/w6.7z</a></div>
<div class="row pt-3 mx-auto"></div>
</div>
</nav></div>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData_40923151" height="630" muted="true" width="1008">
<source src="/downloads/5.mp4" type="video/mp4"/></video></div>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData_40923151" height="630" muted="true" width="1008">
<source src="/downloads/2.mp4" type="video/mp4"/></video></div>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData_40923151" height="630" muted="true" width="1008">
<source src="/downloads/3..mp4" type="video/mp4"/></video></div>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData_40923151" height="630" muted="true" width="1008">
<source src="/downloads/4..mp4" type="video/mp4"/></video></div><h2>w8</h2>
<p><img alt="" height="1080" src="/images/螢幕擷取畫面 (1).png" width="1920"/></p>
<h2>w10</h2>
<p><span>已知 </span><a href="https://nfuedu.sharepoint.com/:u:/s/cad2022/EQTYcGymLWhJkYvzj94FNowBUzVx9Qaxn7nbtvZkdE1CUg?e=DJat7E" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://nfuedu.sharepoint.com/:u:/s/cad2022/eqtycgymlwhjkyvzj94fnowbuzvx9qaxn7nbtvzkde1cug?e=djat7e">block.prt</a><span><span> </span>中 p8=59, p9=44, 請利用網際表單, 將 p8, p9 都改為 50 之後, 在瀏覽中提供新的 block_new.prt 檔案下載, 並直接在網頁上展示該零件的 STL 格式檔案. </span><a href="/downloads/41023130.stl">/downloads/41023130.stl</a></p>
<div>
<div>
<div>w10 HW2 web based NX</div>
<div data-tid="messageBodyContainer">
<div data-tid="messageBodyContent">
<div>
<div>
<div>
<div>
<div>已知 <a href="https://nfuedu.sharepoint.com/:u:/s/cad2022/EQTYcGymLWhJkYvzj94FNowBUzVx9Qaxn7nbtvZkdE1CUg?e=DJat7E" title="https://nfuedu.sharepoint.com/:u:/s/cad2022/eqtycgymlwhjkyvzj94fnowbuzvx9qaxn7nbtvzkde1cug?e=djat7e">block.prt</a> 中 p8=59, p9=44, 請利用網際表單, 將 p8, p9 都改為 50 之後, 在瀏覽中提供新的 block_new.prt 檔案下載, 並直接在網頁上展示該零件的 STL 格式檔案.</div>
<div>範例程式:</div>
<div>
<div>from flask import Flask, request</div>
<div>
<div>
<div># for NX2027 import NXOpen import NXOpen.UF import NXOpen.Gateway</div>
<div>
<div>
<div>app = Flask(__name__)</div>
<div>
<div>
<div>@app.route('/') def index():     return '''     &lt;form action="/action" method="post"&gt;     a: &lt;input type="text" name="a" size="10"&gt;&lt;br /&gt;     b: &lt;input type="text" name="b" size="10"&gt;&lt;br /&gt;     &lt;input type="submit" value="send"&gt;     &lt;/form&gt;     '''</div>
<div>
<div>
<div>@app.route('/action', methods=['POST']) def action():     a = request.form['a']     b = request.form['b']     return "a: " + a +", " + "b: " + b</div>
<div>
<div>
<div>@app.route('/nxopen') def nxopen():     # 取得目前開啟的工作階段     theSession = NXOpen.Session.GetSession()     theUfSession = NXOpen.UF.UFSession.GetUFSession()            # 建立 ListingWindow     listWin= theSession.ListingWindow     # 開啟零件檔案     basePart1 = theSession.Parts.OpenBaseDisplay("block.prt")     workPart = theSession.Parts.Work     unit1 = workPart.UnitCollection.FindObject("MilliMeter")     # height     p7 = workPart.Expressions.FindObject("p7")     # width     p8 = workPart.Expressions.FindObject("p8")     # length     p9 = workPart.Expressions.FindObject("p9")     workPart.Expressions.EditWithUnits(p7, unit1, "30")     workPart.Expressions.EditWithUnits(p8, unit1, "60")     workPart.Expressions.EditWithUnits(p9, unit1, "90")     theSession.UpdateManager.DoUpdate(0)     try:         saveStatus1 = workPart.SaveAs("block_new.prt")         saveStatus1.Dispose()     except:         pass     # initialize list to hold bodies     theBodyTags = []         for x in workPart.Bodies:         if x.IsSolidBody:             theBodyTags.append(x.Tag)            # 準備輸出 ASCII 格式 STL 零件檔案     sTLCreator1 = theSession.DexManager.CreateStlCreator()     sTLCreator1.AutoNormalGen = True     sTLCreator1.ChordalTol = 0.08     sTLCreator1.AdjacencyTol = 0.08     sTLCreator1.OutputFile = "block_ascii.stl"     # Binary STL: NXOpen.STLCreatorOutputTypeEnum.Binary     sTLCreator1.OutputType = NXOpen.STLCreatorOutputTypeEnum.Text     # 已知 body1 命名     body1 = workPart.Bodies.FindObject("EXTRUDE(2)")     added1 = sTLCreator1.ExportSelectionBlock.Add(body1)     nXObject1 = sTLCreator1.Commit()     sTLCreator1.Destroy()        # 開啟所建立的 ListingWindow     listWin.Open()     listWin.WriteLine("number of solid bodies: " + str(len(theBodyTags)))         (massProps, Stats) = theUfSession.Modeling.AskMassProps3d(theBodyTags, len(theBodyTags), 1, 4, .03, 1, [0.99,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0])     listWin.WriteLine("units: kg, mm")     listWin.WriteLine("surface area: " + str(massProps[0]))     listWin.WriteLine("volume: " + str(massProps[1]*1E9))     # 在 ListingWindow 中寫入字串     listWin.WriteLine("Hello, NXOpen")     listWin.Close()          return "mass: " + str(massProps[0])</div>
<div>
<div>
<div># app.run(host=ip, port=port, debug=True, ssl_context="adhoc") app.run(port=8123)  </div>
<div>範例檔案: <a href="https://nfuedu.sharepoint.com/:u:/s/cad2022/EfNdHIWdVTBHld5yh6JmFTMBiowyiNNlcfFsP8PqvUN6mw?e=jxxZdb" title="https://nfuedu.sharepoint.com/:u:/s/cad2022/efndhiwdvtbhld5yh6jmftmbiowyinnlcffsp8pqvun6mw?e=jxxzdb">w10_cad2022_solvespace_ex.7z</a></div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div>已編輯</div>
</div>
<div>&lt;https://teams.microsoft.com/l/message/19:0442122d8ab84fbca61c10364c1da636@thread.tacv2/1668066864592?tenantId=e650a2d7-e923-45bb-8fa6-1af5b0f72f09&amp;amp;groupId=3eda9b91-6227-4479-9f15-5541882d4a94&amp;amp;parentMessageId=1668066864592&amp;amp;teamName=cad2022&amp;amp;channelName=w10&amp;amp;createdTime=1668066864592&amp;amp;allowXTenantAccess=false&gt;</div>
</div>
<h2>W11</h2>
<div>
<ul>
<li>請問 w11 週小考有幾人缺考?</li>
<li>請問 w11 週小考平均分數多少?</li>
</ul>
<h2>w14</h2>
<h3>Solvespace 零組件繪圖考試 Onshape 零組件繪圖考試</h3>
<h4><a href="/downloads/計算機.7z">/downloads/計算機.7z</a> </h4>
<p></p>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData_40923151" height="630" muted="true" width="1008">
<source src="/downloads/w14.mp4" type="video/mp4"/></video></div><h3>NX2027 零組件繪圖考試</h3>
<p><a href="/downloads/計算機2.7z">/downloads/計算機2.7z</a></p>
<h2>w15</h2>
<p><!-- 程式執行 ouput 區 --></p>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData_40923151" height="630" muted="true" width="1008">
<source src="/downloads/nx w14.mp4" type="video/mp4"/></video></div>
<h3>ONSHAPE</h3>
<p><a href="/downloads/onshape.7z">/downloads/onshape.7z</a></p>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData_40923151" height="630" muted="true" width="1008">
<source src="/downloads/onshape.mp4" type="video/mp4"/></video></div>
<h3>Solvespace</h3>
<p><a href="/downloads/Solvespace.7z">/downloads/Solvespace.7z</a></p>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData_40923151" height="630" muted="true" width="1008">
<source src="/downloads/two-link.mp4" type="video/mp4"/></video></div>
<div class="winkVideoContainerClass"></div>
<h2>w16</h2>
<p>彈珠檯</p>
<p><a href="/downloads/1.7z">/downloads/1.7z</a></p>
<div class="row pt-3 mx-auto"></div>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData_40923151" height="630" muted="true" width="1008">
<source src="/downloads/1.mp4" type="video/mp4"/></video></div></div>