var tipuesearch = {"pages": [{'title': 'About', 'text': '\n 倉儲:\xa0 https://github.com/mdecad2022/site-41023130.git \n 網頁:\xa0 https://mdecad2022.github.io/site-41023130/\xa0 \n \n \xa0 \n \n 2022 Fall 電腦輔助設計與實習到底在教甚麼? \n \n \n \n \n 電腦輔助設計包含電腦、輔助與設計等三個要素, 電腦包含軟體、硬體與介於兩者中間的所謂韌體 ( Firmware ), 而所謂"輔助" (Aided) 則指從旁協助, 最後的設計 (Design), 則泛指將使用者的需求, 依據設計者的安排與確認流程, 逐一從虛 (模擬) 邁向實體 (實現). \n 從 Firmware 出現的動機與背景: \n \n As computers began to increase in  complexity , it became clear that various programs needed to first be initiated and run to provide a consistent environment necessary for running more complex programs at the user\'s discretion. This required programming the computer to run those programs  automatically . Furthermore, as companies, universities, and marketers wanted to sell computers to  laypeople  with little technical knowledge, greater automation became necessary to allow a lay-user to easily run programs for practical purposes. This gave rise to a kind of software that  a user would not consciously run , and it led to software that  a lay user wouldn\'t even know about . \n \n 共有幾個關鍵字詞, 其中包括 complexity, automatically, laypeople, a user would not consciously run, 以及最後的 a lay user wouldn\'t even know about. \n 這段文字說明韌體 (Firmware) 的出現可以歸納出下列動機與原因: \n \n 電腦的發展越來越複雜之後, 透過軟體、電腦硬體及網路環境溝通的事項變得越來越多且精細. \n 使得這些硬體元件、使用環境辨識與啟動相關設定, 改由功能更強且自動執行的韌體程式進行處理. \n 此外, 為了推廣讓更多較無專業知識的普通人使用電腦. \n 於是介於電腦軟體、電腦硬體及網路環境間, 儘量不讓使用者察覺韌體的存在. \n 但為了提升電腦的使用效能, 這些精密配置且自動執行的韌體程式卻越來越多. \n 最後, 一般人 (也就是較無專業知識的普通人) 在使用電腦時, 根本就不知道電腦的運行過程中, 有所謂韌體的存在. \n \n 假如我們將上述文句使用者操作的"電腦"換成" 現代產品設計與開發流程套件 ", 而將"韌體"換成" 數學理論、資料結構與演算法 ", 就成為: \n \n "現代產品設計與開發流程套件"的發展越來越複雜之後, 透過軟體、電腦硬體及網路環境溝通的事項變得越來越多且精細. \n 使得這些硬體元件、使用環境辨識與啟動相關設定, 改由功能更強且自動執行的"數學理論、資料結構與演算法"程式進行處理. \n 此外, 為了推廣讓更多較無專業知識的普通人使用"現代產品設計與開發流程套件". \n 於是介於電腦軟體、電腦硬體及網路環境間, 儘量不讓使用者察覺"數學理論、資料結構與演算法"的存在. \n 但為了提升"現代產品設計與開發流程套件"的使用效能, 這些精密配置且自動執行的"數學理論、資料結構與演算法"程式卻越來越多. \n 最後, 一般人 (也就是較無專業知識的普通人) 在使用"現代產品設計與開發流程套件"時, 根本就不知道電腦的運行過程中, 有所謂"數學理論、資料結構與演算法"的存在. \n \n 假如再將" 數學理論、資料結構與演算法 "泛指為 Theory、Structure and Algorithm, 也就是"原理、架構與邏輯"則有關電腦輔助設計課程內容在大學課程的安排就可以分為"不需要了解電腦輔助設計套件原理、架構與邏輯"的操作者, 以及"需要了解電腦輔助設計套件原理、架構與邏輯"的操作與開發者. \n 2022 Fall 電腦輔助設計與實習課程就是在訓練與培養" 需要了解電腦輔助設計套件原理、架構與邏輯 "的操作與開發者. \n 三十年前只要會操作電腦, 就一定會有工作. \n 二十年前只要會繪製 2D 產品設計工程圖, 就一定會有工作. \n 十年前只要會繪製 3D 產品設計工程圖, 就一定會有工作. \n 現在只要會操作 CAD/CAE/CAM 電腦套件, 就一定會有工作. \n 十年後......三十歲......, 就一定會有工作. \n 二十年後......四十歲......, 就一定會有工作. \n 三十年後......五十歲......, 就一定會有工作. \n \n \n \n \n \n <https://teams.microsoft.com/l/message/19:c1d1634109a54e1db839815e032131d8@thread.tacv2/1669001374060?tenantId=e650a2d7-e923-45bb-8fa6-1af5b0f72f09&amp;groupId=3eda9b91-6227-4479-9f15-5541882d4a94&amp;parentMessageId=1669001374060&amp;teamName=cad2022&amp;channelName=w12&amp;createdTime=1669001374060&amp;allowXTenantAccess=false> \n \n cmsite: wcms use  https://github.com/mdecycu/cmsimde  as submodule \n', 'tags': '', 'url': 'About.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation \n Variables \n Comments \n Numbers \n Strings \n print \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n 其中 \n', 'tags': '', 'url': 'Brython.html'}, {'title': '期中', 'text': 'W1 建立GITHUB 建立倉儲 \n w2 放假 \n w3 進入teams 加入會議 \n \n 透過\xa0\xa0 mdecad2022\xa0\xa0 的 organization 建立個人可以管理的倉儲 (site-Github_帳號) \xa0 \n 利用\xa0\xa0 replit 帳號所啟動的動態網站進行內容管理 \xa0 \n 動態轉為靜態網站內容之後,\xa0\xa0 要設法與 Github 倉儲同步. \xa0 \n 下載以下三個資料夾 \n NX2027.3401_lite \n portable_python_3.10.6 \n CoppeliaSimEdu_4.3.0_rev12 W3 \n \n \n w4 打開可攜程式 \n w5 更新版本 \n .建立考試網站帳號 \n .下載可攜,建立近端可攜系統。 \n 登入Replit \n 在 Replit 執行動態網站: \xa0 \n 必須進入 Shell, 在倉儲根目錄執行下列兩則指令 (取下子模組內容, 並安裝執行所需模組). \xa0 \n git submodule update --init --recursive \xa0 \n pip install\xa0\xa0 flask flask_cors bs4 lxml pelican markdown gevent \xa0 \n w6 NX2022下載 ONSHAPE辦帳密 \n W7 網路設定與可攜系統 雙網路協定 \n W8 NX2022開啟 ONSHAPE登入 \n 下載 Solvespace 3.1 版 for Windows \n \n', 'tags': '', 'url': '期中.html'}, {'title': 'HW', 'text': '', 'tags': '', 'url': 'HW.html'}, {'title': 'w8', 'text': '\n', 'tags': '', 'url': 'w8.html'}, {'title': 'w10', 'text': '已知\xa0 block.prt \xa0 中 p8=59, p9=44, 請利用網際表單, 將 p8, p9 都改為 50 之後, 在瀏覽中提供新的 block_new.prt 檔案下載, 並直接在網頁上展示該零件的 STL 格式檔案.\xa0 /downloads/41023130.stl \n \n \n w10 HW2 web based NX \n \n \n \n \n \n \n 已知  block.prt  中 p8=59, p9=44, 請利用網際表單, 將 p8, p9 都改為 50 之後, 在瀏覽中提供新的 block_new.prt 檔案下載, 並直接在網頁上展示該零件的 STL 格式檔案. \n 範例程式: \n \n from flask import Flask, request \n \n \n # for NX2027 import NXOpen import NXOpen.UF import NXOpen.Gateway \n \n \n app = Flask(__name__) \n \n \n @app.route(\'/\') def index(): \xa0 \xa0 return \'\'\' \xa0 \xa0 <form action="/action" method="post"> \xa0 \xa0 a: <input type="text" name="a" size="10"><br /> \xa0 \xa0 b: <input type="text" name="b" size="10"><br /> \xa0 \xa0 <input type="submit" value="send"> \xa0 \xa0 </form> \xa0 \xa0 \'\'\' \n \n \n @app.route(\'/action\', methods=[\'POST\']) def action(): \xa0 \xa0 a = request.form[\'a\'] \xa0 \xa0 b = request.form[\'b\'] \xa0 \xa0 return "a: " + a +", " + "b: " + b \n \n \n @app.route(\'/nxopen\') def nxopen(): \xa0 \xa0 # 取得目前開啟的工作階段 \xa0 \xa0 theSession = NXOpen.Session.GetSession() \xa0 \xa0 theUfSession = NXOpen.UF.UFSession.GetUFSession() \xa0 \xa0 \xa0\xa0 \xa0 \xa0 # 建立 ListingWindow \xa0 \xa0 listWin= theSession.ListingWindow \xa0 \xa0 # 開啟零件檔案 \xa0 \xa0 basePart1 = theSession.Parts.OpenBaseDisplay("block.prt") \xa0 \xa0 workPart = theSession.Parts.Work \xa0 \xa0 unit1 = workPart.UnitCollection.FindObject("MilliMeter") \xa0 \xa0 # height \xa0 \xa0 p7 = workPart.Expressions.FindObject("p7") \xa0 \xa0 # width \xa0 \xa0 p8 = workPart.Expressions.FindObject("p8") \xa0 \xa0 # length \xa0 \xa0 p9 = workPart.Expressions.FindObject("p9") \xa0 \xa0 workPart.Expressions.EditWithUnits(p7, unit1, "30") \xa0 \xa0 workPart.Expressions.EditWithUnits(p8, unit1, "60") \xa0 \xa0 workPart.Expressions.EditWithUnits(p9, unit1, "90") \xa0 \xa0 theSession.UpdateManager.DoUpdate(0) \xa0 \xa0 try: \xa0 \xa0 \xa0 \xa0 saveStatus1 = workPart.SaveAs("block_new.prt") \xa0 \xa0 \xa0 \xa0 saveStatus1.Dispose() \xa0 \xa0 except: \xa0 \xa0 \xa0 \xa0 pass \xa0 \xa0 # initialize list to hold bodies \xa0 \xa0 theBodyTags = [] \xa0 \xa0 \xa0 \xa0 for x in workPart.Bodies: \xa0 \xa0 \xa0 \xa0 if x.IsSolidBody: \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 theBodyTags.append(x.Tag) \xa0 \xa0 \xa0\xa0 \xa0 \xa0 # 準備輸出 ASCII 格式 STL 零件檔案 \xa0 \xa0 sTLCreator1 = theSession.DexManager.CreateStlCreator() \xa0 \xa0 sTLCreator1.AutoNormalGen = True \xa0 \xa0 sTLCreator1.ChordalTol = 0.08 \xa0 \xa0 sTLCreator1.AdjacencyTol = 0.08 \xa0 \xa0 sTLCreator1.OutputFile = "block_ascii.stl" \xa0 \xa0 # Binary STL: NXOpen.STLCreatorOutputTypeEnum.Binary \xa0 \xa0 sTLCreator1.OutputType = NXOpen.STLCreatorOutputTypeEnum.Text \xa0 \xa0 # 已知 body1 命名 \xa0 \xa0 body1 = workPart.Bodies.FindObject("EXTRUDE(2)") \xa0 \xa0 added1 = sTLCreator1.ExportSelectionBlock.Add(body1) \xa0 \xa0 nXObject1 = sTLCreator1.Commit() \xa0 \xa0 sTLCreator1.Destroy() \xa0\xa0 \xa0 \xa0 # 開啟所建立的 ListingWindow \xa0 \xa0 listWin.Open() \xa0 \xa0 listWin.WriteLine("number of solid bodies: " + str(len(theBodyTags))) \xa0 \xa0 \xa0 \xa0 (massProps, Stats) = theUfSession.Modeling.AskMassProps3d(theBodyTags, len(theBodyTags), 1, 4, .03, 1, [0.99,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]) \xa0 \xa0 listWin.WriteLine("units: kg, mm") \xa0 \xa0 listWin.WriteLine("surface area: " + str(massProps[0])) \xa0 \xa0 listWin.WriteLine("volume: " + str(massProps[1]*1E9)) \xa0 \xa0 # 在 ListingWindow 中寫入字串 \xa0 \xa0 listWin.WriteLine("Hello, NXOpen") \xa0 \xa0 listWin.Close() \xa0 \xa0\xa0 \xa0 \xa0 return "mass: " + str(massProps[0]) \n \n \n # app.run(host=ip, port=port, debug=True, ssl_context="adhoc") app.run(port=8123) \xa0 \n 範例檔案:  w10_cad2022_solvespace_ex.7z \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n 已編輯 \n \n <https://teams.microsoft.com/l/message/19:0442122d8ab84fbca61c10364c1da636@thread.tacv2/1668066864592?tenantId=e650a2d7-e923-45bb-8fa6-1af5b0f72f09&amp;groupId=3eda9b91-6227-4479-9f15-5541882d4a94&amp;parentMessageId=1668066864592&amp;teamName=cad2022&amp;channelName=w10&amp;createdTime=1668066864592&amp;allowXTenantAccess=false> \n \n', 'tags': '', 'url': 'w10.html'}, {'title': 'W11', 'text': '\n \n 請問 w11 週小考有幾人缺考? \n 請問 w11 週小考平均分數多少? \n \n', 'tags': '', 'url': 'W11.html'}, {'title': 'w14', 'text': '', 'tags': '', 'url': 'w14.html'}, {'title': 'Solvespace 零組件繪圖考試\xa0Onshape 零組件繪圖考試', 'text': '/downloads/計算機.7z \xa0 \n', 'tags': '', 'url': 'Solvespace 零組件繪圖考試\xa0Onshape 零組件繪圖考試.html'}, {'title': 'NX2027 零組件繪圖考試', 'text': '/downloads/計算機2.7z \n', 'tags': '', 'url': 'NX2027 零組件繪圖考試.html'}, {'title': 'w15', 'text': ' 程式執行 ouput 區  \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n', 'tags': '', 'url': 'w15.html'}, {'title': 'ONSHAPE', 'text': '/downloads/onshape.7z \n', 'tags': '', 'url': 'ONSHAPE.html'}, {'title': 'Solvespace', 'text': '/downloads/Solvespace.7z', 'tags': '', 'url': 'Solvespace.html'}]};